from fastapi.testclient import TestClient
from main import app, get_db
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from database import Base
from models import Library
import pytest
import os
import uuid
from generate_samples import generate_embedding

@pytest.fixture(autouse=True)
def set_testing_flag():
    os.environ['TESTING'] = 'True'

@pytest.fixture(scope="module")
def setup_db():
    Base.metadata.create_all(bind=engine)
    yield
    Base.metadata.drop_all(bind=engine)

@pytest.fixture()
def client():
    return TestClient(app)


def test_create_chunk(client):
    text =  "Blockchain will be a part of Smart Cities."
    embedding = generate_embedding(text)
    library_id = "4c235b80-7111-4620-9ed7-fd2c1ae7dbce" #Add id to specify to which library id you want to add this chunk
    document_id = "6c9cefe1-beab-41c2-a872-e47ed71fc1d2" #Add id to specify to which document id you want to add this chunk
    chunk_data = {
        "text": text,
        "embedding": embedding,
        "metadata_config": {
            "metadata_info": "Chunk New 1",
        },
        "document_id": document_id 
        }
    response = client.post(f"/libraries/{library_id}/documents/{document_id}/chunk", json=chunk_data)
    response_data = response.json()

    assert response.status_code == 200
    assert "id" in response_data
    assert "text" in response_data
    assert "embedding" in response_data
    assert "metadata_config" in response_data
    assert "document_id" in response_data

def test_get_chunks(client):
    response = client.get(f"/chunks")
    assert response.status_code == 200
    chunks = response.json()
    print(f"Chunks returned: {len(chunks)}")
    assert isinstance(chunks, list), "Response should be a list of chunks"


def test_get_chunk(client):
    chunk_id = "cbb2da81-3c3e-4434-bd13-b766582a5006"
    response = client.get(f"/chunk/{chunk_id}")
    print(response.json())
    assert response.status_code == 200
    assert response.json()["id"] == chunk_id

def test_update_chunk(client):
    chunk_id = "73ffb4f3-78d1-49ab-b729-45fe0ba60590" #Add id to specify to which chunk id you want to add this chunk
    library_id = "4c235b80-7111-4620-9ed7-fd2c1ae7dbce" #Add id to specify to which library id you want to add this chunk
    document_id = "6c9cefe1-beab-41c2-a872-e47ed71fc1d2" #Add id to specify to which document id you want to add this chunk
    chunk_data = {
        "id": chunk_id,
        "text": "Updated Again - Smart cities use IoT to enhance public services.",
        "embedding": 
    [
        -0.03094482421875,
        0.018341064453125,
        -0.0183563232421875,
        0.052001953125,
        -0.0236053466796875,
        0.02606201171875,
        -0.1121826171875,
        -0.0701904296875,
        0.005847930908203125,
        -0.05889892578125,
        -0.036041259765625,
        0.06536865234375,
        -0.0175018310546875,
        -0.030853271484375,
        0.02569580078125,
        -0.06097412109375,
        -0.04217529296875,
        -0.0194091796875,
        0.04827880859375,
        -0.050628662109375,
        -0.03851318359375,
        -0.09539794921875,
        0.061309814453125,
        0.01329803466796875,
        0.04345703125,
        0.0673828125,
        -0.024017333984375,
        0.0278472900390625,
        0.005840301513671875,
        0.0278778076171875,
        -0.040130615234375,
        -0.02972412109375,
        0.047027587890625,
        -0.0101165771484375,
        0.0181121826171875,
        0.143798828125,
        -0.0197601318359375,
        -0.04510498046875,
        0.04034423828125,
        -0.02374267578125,
        -0.036163330078125,
        -0.019287109375,
        -0.01727294921875,
        -0.033599853515625,
        -0.060516357421875,
        -0.00701141357421875,
        0.03466796875,
        -0.0472412109375,
        -0.053955078125,
        0.0521240234375,
        -0.05560302734375,
        -0.07049560546875,
        -0.0244140625,
        0.042144775390625,
        0.0132293701171875,
        0.002658843994140625,
        -0.008819580078125,
        -0.01087188720703125,
        -0.053955078125,
        -0.008544921875,
        -0.0189056396484375,
        -0.00370025634765625,
        0.0264892578125,
        0.0294342041015625,
        0.0682373046875,
        -0.032012939453125,
        -0.05126953125,
        -0.010498046875,
        -0.0634765625,
        -0.026397705078125,
        -0.0355224609375,
        -0.047882080078125,
        0.00516510009765625,
        -0.0151214599609375,
        0.1241455078125,
        -0.034423828125,
        -0.079345703125,
        0.039886474609375,
        0.0085296630859375,
        -0.037353515625,
        0.0305938720703125,
        0.046600341796875,
        -0.0009388923645019531,
        0.0167236328125,
        -0.02166748046875,
        0.07757568359375,
        -0.12481689453125,
        0.037506103515625,
        0.045562744140625,
        0.0007328987121582031,
        -0.1044921875,
        -0.030792236328125,
        0.02484130859375,
        -0.044921875,
        -0.06976318359375,
        0.00020897388458251953,
        0.09136962890625,
        0.027069091796875,
        -0.0034923553466796875,
        0.03826904296875,
        -0.036865234375,
        -0.07220458984375,
        0.0265960693359375,
        -0.1282958984375,
        -0.0239105224609375,
        -0.032135009765625,
        -0.00765228271484375,
        -0.0660400390625,
        0.06121826171875,
        0.0150146484375,
        -0.0513916015625,
        0.0018062591552734375,
        -0.08013916015625,
        -0.0014562606811523438,
        -0.00673675537109375,
        -0.082275390625,
        -0.0579833984375,
        0.035247802734375,
        -0.035064697265625,
        0.00740814208984375,
        -0.03143310546875,
        0.07879638671875,
        0.031585693359375,
        -0.034942626953125,
        0.0227813720703125,
        0.00496673583984375,
        0.037811279296875,
        0.08258056640625,
        -0.0287933349609375,
        0.04736328125,
        0.03277587890625,
        0.061248779296875,
        0.12432861328125,
        0.032562255859375,
        0.0576171875,
        0.01568603515625,
        0.0032711029052734375,
        -0.095458984375,
        0.00945281982421875,
        0.05511474609375,
        0.050384521484375,
        0.1187744140625,
        0.02825927734375,
        -0.034820556640625,
        0.03094482421875,
        0.03094482421875,
        0.009429931640625,
        -0.03515625,
        -0.04443359375,
        -0.05023193359375,
        -0.0240631103515625,
        0.045257568359375,
        0.049224853515625,
        0.0206146240234375,
        0.11480712890625,
        -0.09375,
        0.023223876953125,
        -0.09051513671875,
        -0.047332763671875,
        0.0845947265625,
        -0.0082550048828125,
        0.006671905517578125,
        -0.051300048828125,
        0.027069091796875,
        -0.00385284423828125,
        -0.10498046875,
        0.084228515625,
        0.0877685546875,
        0.0223846435546875,
        0.06884765625,
        -0.00821685791015625,
        -0.049560546875,
        0.1065673828125,
        -0.06573486328125,
        0.146728515625,
        0.06805419921875,
        -0.048004150390625,
        0.0814208984375,
        -0.007152557373046875,
        0.0079498291015625,
        0.03875732421875,
        0.03375244140625,
        0.0101165771484375,
        -0.024932861328125,
        0.0281219482421875,
        0.0726318359375,
        0.0305633544921875,
        -0.016815185546875,
        0.022857666015625,
        -0.000060498714447021484,
        -0.002651214599609375,
        0.09912109375,
        0.10595703125,
        0.08843994140625,
        0.043731689453125,
        -0.0269317626953125,
        0.0687255859375,
        -0.054901123046875,
        -0.022674560546875,
        0.0176544189453125,
        -0.057952880859375,
        0.02691650390625,
        -0.0182647705078125,
        -0.123779296875,
        -0.01369476318359375,
        -0.033447265625,
        -0.016998291015625,
        0.00563812255859375,
        -0.01445770263671875,
        0.007114410400390625,
        -0.034515380859375,
        -0.01348876953125,
        0.051513671875,
        0.0282135009765625,
        0.004878997802734375,
        -0.1075439453125,
        -0.019073486328125,
        0.07269287109375,
        0.0570068359375,
        -0.031280517578125,
        0.07427978515625,
        0.0980224609375,
        0.08819580078125,
        -0.0849609375,
        0.0845947265625,
        -0.06787109375,
        0.0377197265625,
        0.08465576171875,
        0.061126708984375,
        -0.02972412109375,
        0.0199432373046875,
        -0.04229736328125,
        0.007404327392578125,
        0.0784912109375,
        0.037353515625,
        -0.050994873046875,
        -0.00452423095703125,
        -0.0789794921875,
        -0.0440673828125,
        0.051666259765625,
        -0.0205535888671875,
        -0.1334228515625,
        0.056427001953125,
        0.032501220703125,
        -0.0286712646484375,
        0.08135986328125,
        0.04034423828125,
        0.0298614501953125,
        -0.045562744140625,
        0.018829345703125,
        -0.01445770263671875,
        -0.037078857421875,
        -0.05126953125,
        0.06561279296875,
        0.0214385986328125,
        0.0272979736328125,
        -0.10980224609375,
        0.00705718994140625,
        0.03253173828125,
        0.0272674560546875,
        0.00399017333984375,
        -0.033721923828125,
        0.0014944076538085938,
        -0.0172882080078125,
        0.0267486572265625,
        -0.039215087890625,
        -0.0877685546875,
        -0.005157470703125,
        -0.04144287109375,
        -0.003223419189453125,
        -0.0877685546875,
        -0.01274871826171875,
        0.00324249267578125,
        0.0290374755859375,
        0.03961181640625,
        0.0728759765625,
        -0.03338623046875,
        -0.10626220703125,
        0.01157379150390625,
        0.040069580078125,
        0.005901336669921875,
        -0.027099609375,
        -0.023193359375,
        0.053619384765625,
        0.021728515625,
        -0.057098388671875,
        0.0836181640625,
        0.07794189453125,
        -0.00485992431640625,
        -0.04461669921875,
        0.006168365478515625,
        0.05084228515625,
        -0.01079559326171875,
        0.0465087890625,
        0.0162200927734375,
        0.036224365234375,
        0.0423583984375,
        0.0014295578002929688,
        -0.0272979736328125,
        -0.058563232421875,
        0.03955078125,
        -0.10357666015625,
        -0.0121307373046875,
        -0.00945281982421875,
        0.0672607421875,
        -0.01399993896484375,
        0.1072998046875,
        -0.038299560546875,
        -0.0034465789794921875,
        0.0188751220703125,
        -0.049072265625,
        0.0202484130859375,
        -0.03607177734375,
        -0.051788330078125,
        -0.072998046875,
        -0.02850341796875,
        -0.06488037109375,
        0.035491943359375,
        0.0306549072265625,
        -0.0301361083984375,
        -0.0122222900390625,
        0.041412353515625,
        -0.036346435546875,
        -0.0214691162109375,
        0.013702392578125,
        0.01157379150390625,
        0.057281494140625,
        0.0491943359375,
        -0.0033435821533203125,
        0.00738525390625,
        -0.032257080078125,
        -0.043121337890625,
        -0.0182647705078125,
        0.09625244140625,
        0.1309814453125,
        0.01554107666015625,
        -0.0184478759765625,
        -0.07806396484375,
        -0.044036865234375,
        -0.08087158203125,
        0.06182861328125,
        -0.00922393798828125,
        -0.057403564453125,
        0.057159423828125,
        -0.00405120849609375,
        -0.0595703125,
        -0.0208892822265625,
        0.08929443359375,
        -0.0272674560546875,
        -0.049346923828125,
        -0.06817626953125,
        -0.008758544921875,
        0.01303863525390625,
        0.030609130859375,
        -0.03607177734375,
        -0.0299224853515625,
        0.031524658203125,
        0.04888916015625,
        -0.0321044921875,
        0.02911376953125,
        -0.0167236328125,
        0.0255889892578125,
        -0.05938720703125,
        0.044097900390625,
        -0.0198974609375,
        -0.050933837890625,
        0.04864501953125,
        0.01849365234375,
        -0.02044677734375,
        -0.02740478515625,
        -0.0875244140625,
        -0.016448974609375,
        -0.0309600830078125,
        -0.024658203125,
        0.00518798828125,
        0.054779052734375,
        0.0044708251953125,
        -0.06768798828125,
        -0.0274505615234375,
        0.0115509033203125,
        -0.03436279296875,
        -0.049224853515625,
        0.007511138916015625,
        0.0205078125
    ],

        "metadata_config": {
            "metadata_info": "Chunk New Updated",
        },
        "document_id": document_id 
        }
    response = client.put(f"/libraries/{library_id}/documents/{document_id}/chunks/{chunk_id}", json=chunk_data)
    response_data = response.json()
    print(response_data)
    assert response.status_code == 200
    assert "id" in response_data
    assert "text" in response_data
    assert "embedding" in response_data
    assert "metadata_config" in response_data
    assert "document_id" in response_data

def test_delete_chunk(client):
    chunk_id = "73ffb4f3-78d1-49ab-b729-45fe0ba60590" #Add id to specify to which chunk id you want to delete this chunk
    library_id = "4c235b80-7111-4620-9ed7-fd2c1ae7dbce" #Add id to specify to which library id you want to delete this chunk
    document_id = "6c9cefe1-beab-41c2-a872-e47ed71fc1d2" #Add id to specify to which document id you want to delete this chunk
    response = client.delete(f"/libraries/{library_id}/documents/{document_id}/chunks/{chunk_id}")
    assert response.status_code == 200
    assert response.json()["id"] == chunk_id